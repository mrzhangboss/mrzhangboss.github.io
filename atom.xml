<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小伦子的笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mrzhangboss.github.io/"/>
  <updated>2021-08-29T10:10:20.540Z</updated>
  <id>https://mrzhangboss.github.io/</id>
  
  <author>
    <name>张伦</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>five</title>
    <link href="https://mrzhangboss.github.io/2021/07/05/letter/5/"/>
    <id>https://mrzhangboss.github.io/2021/07/05/letter/5/</id>
    <published>2021-07-04T23:55:00.000Z</published>
    <updated>2021-08-29T10:10:20.540Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c27d6a94d119d2cfc7496eb122d1529377b840f34d662079420585c16baaef60">995e50c340763ee1a325e8c3b289bb94456e83b145cb94665d273a763f4cbb4fe24f5ef5809472d147f1ec46da66dd7a1fbf6dba9926304cd3191be6a22b10217f607d90741b4dbbd5926c961baf490880405f4ef661e941c5365cc26ad1d19b4e07243c6df32783453db85d8b2b4606ed5fb678440ce44afb23ebe8a108fb02b5bd2d06b84c57c4d35bf0a3552cd7fbe2e0106a9984914006e082c84dfb94b007cd86f06fb46a19ed056c5cef1dd67f5056652f8dd266fa70d3a0c0b9faf99faaba6c412fd892f151e92858ccb06169033f3799529fa2396a5038786caaa9a2d3c2006ed80fdaa295b47004e8d770e4bccc636b3fed87acea9389aa78ad473d7d4de4a9bbf6a541caf3e93e26bf907c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这里有东西被加密了，需要输入密码查看哦。
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>four</title>
    <link href="https://mrzhangboss.github.io/2021/07/05/letter/4/"/>
    <id>https://mrzhangboss.github.io/2021/07/05/letter/4/</id>
    <published>2021-07-04T23:55:00.000Z</published>
    <updated>2021-07-05T01:19:44.394Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="83f5de00250515192a8a602b264052a2e9cb35c1eb450b31fd6a987030fa75c4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这里有东西被加密了，需要输入密码查看哦。
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>six</title>
    <link href="https://mrzhangboss.github.io/2021/07/05/letter/6/"/>
    <id>https://mrzhangboss.github.io/2021/07/05/letter/6/</id>
    <published>2021-07-04T23:55:00.000Z</published>
    <updated>2021-09-05T13:54:25.667Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4718b7b057a8f0b3d3ac184c25abea0c1534cc6efca3f334de6b32b6ed6f3da5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这里有东西被加密了，需要输入密码查看哦。
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>seven</title>
    <link href="https://mrzhangboss.github.io/2021/07/05/letter/7/"/>
    <id>https://mrzhangboss.github.io/2021/07/05/letter/7/</id>
    <published>2021-07-04T23:55:00.000Z</published>
    <updated>2021-09-05T15:20:59.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问自己的十个问题"><a href="#问自己的十个问题" class="headerlink" title="问自己的十个问题"></a>问自己的十个问题</h1><h2 id="1-为什么会有这封信"><a href="#1-为什么会有这封信" class="headerlink" title="1. 为什么会有这封信"></a>1. 为什么会有这封信</h2><blockquote><p>我和小杜现在是一个分手状态，我不确定未来一定会复合</p></blockquote><p>问：那这是一封忏悔信吗？</p><blockquote><p>不是，你可以想象我憋不住了，把自己的想说的话讲给小杜听</p></blockquote><p>问： 你们为啥不微信聊？</p><blockquote><p>我的内心想法是这样的，我很想跑到小杜楼下捧到一大束玫瑰花，对她说：我想再重新追你一次</p></blockquote><p>问： 你为什么不这么做呢？</p><blockquote><p>爱一个才真的会懂一个人，假如之前的我可能会这样做，但是现在不会了</p></blockquote><p>问：在你心目中，你觉得小杜希望你怎么做？</p><blockquote><p>我觉得，小杜其实没有太多想法，她早就看穿了我，我没有把她放在第一位（爱自己胜过爱她），小杜曾经和我说过，她知道我这样，只能凑合过了，她没有放弃，但是我当初却不明白，小杜希望我能在内心深处爱她，而且她喜欢的是我真正的我，而不是因为她说我要爱他，我才爱她</p></blockquote><p>问： 那你当初怎么让她成为你的女朋友的</p><blockquote><p>说实话，真的对不起小杜，当初稀里糊涂把小杜追到手，那个时候真的不懂事，不爱一个人也和她表白，其实那个时候自己也不确定自己真的喜欢她，但是一急就表白了</p></blockquote><p>问： 那一开始没感觉吗</p><blockquote><p>其实当初结束了第一场恋爱，有这个想法谈恋爱，但是其实自己还没做好准备</p></blockquote><p>问： 什么准备？</p><blockquote><p>就是都没有好好反思为什么第一场恋爱分手的原因，当初就知道在一起后面越来越痛苦就分手了</p></blockquote><p>问： 那你的初恋你爱过吗？</p><blockquote><p>说句扎心的话，我和初恋都是初恋，我们两有感情，但是只是那种被相亲逼迫下迸发出来的感情</p></blockquote><p>问: 啥意思？</p><blockquote><p>两个人都不知道什么是爱情，以为那个就是爱情，其实TMD不是</p></blockquote><p>问： 为啥？</p><blockquote><p>我们对彼此的爱都太痛苦了，对于双方来说都是因为你是我的xxx，所以我得干什么，你得干什么</p></blockquote><p>问： 意思是包办式婚姻的那种爱？</p><blockquote><p>差不多那回事</p></blockquote><p>问： 这个对你和小杜的有什么影响吗？</p><blockquote><p>非常的大，而且其实在我心里，小杜的ex和我的都影响挺大的</p></blockquote><p>问： 具体有什么影响吗？</p><blockquote><p>我们就是因为这个共同点才慢慢聊起来的，而且说实话，我真的被她的真诚打动了</p></blockquote><p>问： 打动是什么意思？</p><blockquote><p>就是给人非常直率的那种，有啥说啥，特真诚，我说实话，有点内向，好多东西都不想和别人讲， 刚开始可能就觉得哇，这姑娘好好哦，有啥说啥，好喜欢，又长得漂亮</p></blockquote><p>问： 其实我看了一下你们聊天记录，你不是很热情</p><blockquote><p>是的，因为我在犹豫，刚开始觉得漂亮怕自己追不到吧，后面她又和我说感情线复杂，好几个李姓男子在追，说实话当时觉得自己还是要有点道德的，就不想追</p></blockquote><p>问： 那为啥又追了呢？</p><blockquote><p>说实话有点伤人，就是俺对她第一次约会印象实在是太好了，就是那种哇，回家都想流口水的那种，应该是我这辈子第一个这么漂亮的妹子和我一起吃饭聊天看电影，而且感觉她非常的贤惠，真正的想娶回家</p></blockquote><p>问： 那你这是LSP罗？</p><blockquote><p>也不能这么说嘛，文雅一点，心动了，说实话，色归色，但是我对她没有一点污秽的想法，当初还是比较真诚的</p></blockquote><p>问： 为啥分手啊？</p><blockquote><p>说实话两个人都有意分手，可能我是因为她想分手，然后产生退一步的想法，当初连续冷战了一个礼拜，中途时好时坏，后面她看透我了，我们都有气然后就分手了</p></blockquote><p>问： 她看透了你啥？</p><blockquote><p>她知道了我不爱她（原话是没有把她放在第一位）</p></blockquote><p>问： 你真的不爱她吗？</p><blockquote><p>其实当初在一起的时候，只是喜欢，没有爱，我其实不知道什么是爱，我以为喜欢就是爱，我喜欢她，但是我不爱她</p></blockquote><p>问： 为什么你觉得你不爱她？</p><blockquote><p>其实直到我真的爱上了她，我才知道了什么是爱，真的只有你经历过了才懂的，那种撕心裂肺的痛和奋不顾身的爱</p></blockquote><p>问： 你有点虚啊，是不是想骗女孩子和你复合？</p><blockquote><p>不爱她之前有点时候会有，其实那次喝酒喝醉有点这个意思，可能本意就想挽回她吧，其实当时，喝醉之后也没有想明白，到底哪里有问题</p></blockquote><p>问： 你当初啥想法？</p><blockquote><p>回想一下，当初真的就像一个孩子吧，甚至在谈这场恋爱过程中就是一个孩子，当初真的不知道怎么去爱一个人，只知道喜欢她就围着她转，她不喜欢你就变成她喜欢的样子</p></blockquote><p>问： 那你怎么想明白的？</p><blockquote><p>佛家有个词叫顿悟，我其实一直以来都没整明白什么是爱，在知乎上看多了那种别人的爱情，以为女孩子喜欢你那个就是爱，父母这辈也很少看到真正的爱情，其实爱情电影看了很多，自己其实也很想明白那种是什么感觉，但是从小可能就只有暗恋啥的，学校也不教也不让， 也没有一段刻骨铭心的爱情，说实话，想明白这件事我还真没想明白</p></blockquote><p>问：what，别整这么玄乎？</p><blockquote><p>好的，好的，其实我觉得最重要的一点就是我的心变了，不知道是曾经吃到的红烧肉的茴香、还是想起了一起出去牵着我的手那种被依赖感，还有靠在我肩膀的那种触动。</p></blockquote><blockquote><p>其实我当时的脑子很乱，<br>我一直没整明白，我们之间到底要怎么样。在没有爱上她之前，她在我心中的地位和我不相上下，经常我会为心疼自己难受，以后一辈子都要忍这个吗，所以我才会偶尔顶顶她，<br>其实大部分矛盾都是这样造成的。</p></blockquote><blockquote><p>但是当我的心慢慢的烙上她的痕迹，完全占满之后，所有的一切都烟消云散了，脑子心里只有一个她，终于知道真正爱一个人是什么样。</p></blockquote><p>问： 要不是知道你没说假话，我一定说你骗小女孩。</p><blockquote><p>说实话，真的，我以前真的害怕过，我其实发现了自己好像好难再爱上一个人，因为是高中的一场畸形暗恋导致的，以后有时候和你在说，所以其实我觉得，这两场恋爱都好累好累，当你没有完全爱一个人的时候，很多细小的矛盾会割的你遍体鳞伤</p></blockquote><p>问： 之前搬出来也是因为这个？</p><blockquote><p>是的，当爱自己胜过爱别人的时候，强行把自己变成爱她的那个人真的好累</p></blockquote><h2 id="2-那假如小杜真的不爱你了，不会接受你了怎么办？"><a href="#2-那假如小杜真的不爱你了，不会接受你了怎么办？" class="headerlink" title="2. 那假如小杜真的不爱你了，不会接受你了怎么办？"></a>2. 那假如小杜真的不爱你了，不会接受你了怎么办？</h2><blockquote><p>其实我仔细想过为什么我和小杜会走到一起，说高我没有李世庆高，说会说话，我没有李皓宇会 讲话，相反我不但矮，我还不会讲话</p></blockquote><p>问： 那她怎么看上你？</p><blockquote><p>我只能说第一个傻人有傻福，第二个就是互相吸引吧，她有我想要的真诚和体贴和美丽，我有别人没有的傻气和老实，或者还有一点拼搏的志气吧，第三个就是她闺蜜贵人相助吧哈哈</p></blockquote><p>问： 你觉得她为啥和你在一起呢</p><blockquote><p>其实我也没怎么想明白，但是她和我说过，有很多原因，其实可能很大一部分是同行衬托，李皓宇完成做了一个反面例子，咋古话有句 过犹不及矫枉过正，意思是你越用力反而会有反作用</p></blockquote><p>问： 看来还是你这个愣头青捡了便宜？</p><blockquote><p>哈哈，本质上来说是的，我其实在谈的时候觉得自己聊的天真鸡儿稀碎，但是其实误打误撞，她不喜欢那种很会的男人，可能和第一眼眼缘也有关吧</p></blockquote><p>问： 那回到题目她不爱你了，怎么办？</p><blockquote><p>跟你说句有趣的事，就是之前，其实我看知乎有点多，知乎上就觉得舔狗该死，舔狗没有未来，但是你爱上一个人之后吧，就是你会重新创建你自己的人生观，你不容易被外人影响了，你会觉得爱一个人舔狗又何妨</p></blockquote><p>问： 和那个恋爱脑一样把</p><blockquote><p>其实是的，但是也不太一样，打个比方，之前我记得她起的喊我死狗，我当时其实还是有点生气的，因为我们那边骂这种已经会翻脸了，但是如果她现在说的话，我根本不会觉得她在骂我咋的。</p></blockquote><p>问： 那就是说你会等哦。</p><blockquote><p>我是矛盾的吧，心里想等她一辈子，但是只能等到她结婚的那个时候，但是我会祝福她的</p></blockquote><p>问： 那她结婚了你一点都不难过吗</p><blockquote><p>难过肯定难过，我能做到的就是不去打扰她，祝福她，再把她从心里取出来</p></blockquote><h2 id="3-假如你遇到比小杜更好的人你会怎么办？"><a href="#3-假如你遇到比小杜更好的人你会怎么办？" class="headerlink" title="3. 假如你遇到比小杜更好的人你会怎么办？"></a>3. 假如你遇到比小杜更好的人你会怎么办？</h2><blockquote><p>我感觉你在给我埋坑，这个得分情况吧，第一个是我和小杜没有复合，第二个是我和小杜复合了</p></blockquote><p>问： 你和小杜复合你会怎么样。</p><blockquote><p>其实这个东西是个伪命题，反过来讲，社会上比我们帅比我们高的人多的是，小杜绝对能找到比我们<br>多很多的优秀男人，当你去想对方会主动背叛你的时候，你自己为啥不想想还不是自己先背叛了她吗，<br>是吧</p></blockquote><p>问： 你又把我绕进去了，这题跳过，假如小杜和你没复合呢？</p><blockquote><p>首先我可能会遇到，但是我心中有个人之后，不会再主动让另外一个人进来</p></blockquote><p>问： 啥意思，被动进来？</p><blockquote><p>就是说，假如我在路上看到一个美女，我可能会多看一眼，但是我不会去加她微信，制造偶遇等等。</p></blockquote><p>问： 你为啥不直接说永远也不会让人进来</p><blockquote><p>首先这个就很虚伪，你总会遇到有人间接和你接触，再其次的话，其实你这个就是在给我埋坑，假如我说我永远也不接触别的女人，假如小杜看到我这句话，那她就觉得我强迫让她也不接触别的男人，可能以前自私的我会偷偷的想，但是可能爱一个人，就不会胡思乱想了，只会担心她没有事</p></blockquote><h2 id="4-你对未来有什么打算吗"><a href="#4-你对未来有什么打算吗" class="headerlink" title="4. 你对未来有什么打算吗"></a>4. 你对未来有什么打算吗</h2><blockquote><p>其实前面我提了我还是挺拼的一个人，从大学开始就这样吧，其实在明白我是爱上她之后，我第一个很高兴，原来爱一个人这么幸福，会这么想和她共度余生，会想让她过她想要的生活，</p></blockquote><p>问： 你觉得她想要的是什么生活？</p><blockquote><p>之前其实她规划过我们的未来，在她的未来里，我们至少有自己的房子，能过体面的生活，在我的想法，有她的地方就是家</p></blockquote><p>问： 肉麻哦</p><blockquote><p>其实之前说这些真的会脸红，但是发现吧，当爱一个人到达一个点的时候就TM不要脸了</p></blockquote><p>问：你之前还背英语？</p><blockquote><p>其实一直在背吧，但是遇到她之后不知道怎么的就停了，我其实算一个还有点规划的人，但是之前可能规划的都是自己吧，所以会累，累的时候就歇一歇</p></blockquote><p>问：那你规划有什么改变吗？</p><blockquote><p>其实真的还有一个挺大的改变的，之前有点疑惑怎么去平衡自己的奋斗目标和陪女朋友的时间， 之前没怎么想明白，后面想通了，其实规划的目的是什么，是给自己爱的人一个稳定的未来， 之前一直会觉得女朋友怎么会生气不让我为我们未来奋斗呢，但是你连当下的陪伴都做不到，为什么要给女朋友画饼呢</p></blockquote><p>问：哈哈，果然要想治直男还得靠爱情啊</p><h2 id="5-你有什么想对小杜说的吗"><a href="#5-你有什么想对小杜说的吗" class="headerlink" title="5. 你有什么想对小杜说的吗"></a>5. 你有什么想对小杜说的吗</h2><blockquote><p>其实有点时候我又是矛盾的，我即希望小杜能和我和好如初，又不希望小杜和我和好如初</p></blockquote><p>问： 为什么你不希望和好如初？</p><blockquote><p>因为我们和好如初之后，因为我的爱，小杜可能会有一份压力</p></blockquote><p>问：这份压力来自于哪里？</p><blockquote><p>我觉得这份压力来自于我如何去和她重新开始</p></blockquote><h2 id="6-那你准备如何和她重新开始（万一可能的话）？"><a href="#6-那你准备如何和她重新开始（万一可能的话）？" class="headerlink" title="6. 那你准备如何和她重新开始（万一可能的话）？"></a>6. 那你准备如何和她重新开始（万一可能的话）？</h2><blockquote><p>回答问题之前，我想先说我在那冷战的一周（其实可能就是我自己认为的冷战）</p></blockquote><p>问： 你觉得是谁出了问题？</p><blockquote><p>是我，其实就是问题的核心就是我当初不是把她放心上（完完全全的爱她）</p></blockquote><p>问： 你觉得是什么造成的？</p><blockquote><p>第一个我当初根本不懂爱吧，爱自己胜过她，而且最恐怖的事就是我完全不知道怎么去爱一个人</p></blockquote><p>问：你现在认为的爱是什么？</p><blockquote><p>我觉得爱是一种成长，爱是一种平淡，我会100%信任一个人，爱也是一种简单，不会拼命花钱去证明自己爱她，爱会让你找到最合适的相处方式，爱不会让你急，其实最重要还是要找到对的人吧</p></blockquote><p>问：你觉得小杜是你对的人吗？</p><blockquote><p>其实我不想给小杜太大压力，我自己也不是一个给自己很大压力的人，我和小杜都很相似，我们都想要安全感，但是我们也都想要距离感。我其实不想拍着胸脯说违心的话，我只想说在和小杜相处的那些我做自己的日子里，我非常开心，自在，我希望能和她过一辈子，之前我从来没有主动有过和别人规划未来的冲动</p></blockquote><h2 id="7-你觉得让你成长的原因什么？"><a href="#7-你觉得让你成长的原因什么？" class="headerlink" title="7. 你觉得让你成长的原因什么？"></a>7. 你觉得让你成长的原因什么？</h2><blockquote><p>人性本贱吧，只是失去了，痛了，才悟了</p></blockquote><p>问：你哭了吗？</p><blockquote><p>说实话，说分手的时候没有哭出来，有几滴眼泪，当发现爱上她哭了，然后又笑了</p></blockquote><p>问：为啥哭了，又笑了？</p><blockquote><p>之前一直觉得自己有问题，小杜在我面前哭过，当时只是自责，没有难过，好像缺少那种同理心一样，我老外婆去世我也没有哭，我以为我一辈子也不会哭过，但是我发现我自己真的爱上她，真的不想离开她的时候哭了，哭完我知道了，自己终于长大了，知道爱一个人了，我不会再让她因为我缺少真正的爱，真正的理解而难过流泪了</p></blockquote><h2 id="8-万一小杜不想和好，对你彻底死心怎么办"><a href="#8-万一小杜不想和好，对你彻底死心怎么办" class="headerlink" title="8. 万一小杜不想和好，对你彻底死心怎么办"></a>8. 万一小杜不想和好，对你彻底死心怎么办</h2><blockquote><p>以前自私的我可能会觉得至少给个机会吧，但是现在我完全没有了，机会不是小杜给我的，而是我自己争取来的，小杜不想和好只是因为我不够好</p></blockquote><p>问：那你会纠缠着小杜吗？</p><blockquote><p>说真话吗？心里会，但是现实中不会，就好比我只会在微信上给她点点赞，把自己想说的话实在憋不住了就写出来放到她能看到的地方</p></blockquote><p>问：你会放手某一天？</p><blockquote><p>都是成年人了，我会努力成长为小杜喜欢的样子，就算未来不是小杜，我会在小杜想回头的时候第一个响应的人</p></blockquote><h2 id="9-你觉得你理想的爱情是什么"><a href="#9-你觉得你理想的爱情是什么" class="headerlink" title="9. 你觉得你理想的爱情是什么"></a>9. 你觉得你理想的爱情是什么</h2><blockquote><p>其实特别神奇的事，之前在知乎上听过很多说跟爱的人每天早上的一条消息都是甜甜的味道，但是好像自己并没有感受过，自己好像是责任是义务，之前小杜的每一条微信我没有点赞，现在分手后点一个赞都是甜甜的，看着她过得很开心的一天自己也很开心</p></blockquote><p>问：你有什么后悔的事情吗？</p><blockquote><p>最后悔的是什么，应该是没有爱上小杜之前就和她表白了吧，现在想起来，这在一起的两个月，其实我们两个都因为我不懂爱而不开心，对于我来说，我没有后悔做自己，但是后悔在做自己的时候没有爱着你</p></blockquote><p>问：什么是做自己</p><blockquote><p>其实我觉得我有点时候很蠢很笨很直，之前我一直觉得是我的问题，其实那个真真的我没有问题，有问题的是我做的真，但是爱的不深</p></blockquote><h2 id="10-你写这个的目的"><a href="#10-你写这个的目的" class="headerlink" title="10. 你写这个的目的"></a>10. 你写这个的目的</h2><blockquote><p>希望小杜不要为我担心，我不会因为不懂爱而做傻事，我分手之后才爱上你是我最遗憾的事，我希望有一天能像你说的一样，我们能再次相互吸引，下次我们再也不分开好吗！</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问自己的十个问题&quot;&gt;&lt;a href=&quot;#问自己的十个问题&quot; class=&quot;headerlink&quot; title=&quot;问自己的十个问题&quot;&gt;&lt;/a&gt;问自己的十个问题&lt;/h1&gt;&lt;h2 id=&quot;1-为什么会有这封信&quot;&gt;&lt;a href=&quot;#1-为什么会有这封信&quot; class=&quot;
      
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>第三封信</title>
    <link href="https://mrzhangboss.github.io/2021/06/24/letter/3/"/>
    <id>https://mrzhangboss.github.io/2021/06/24/letter/3/</id>
    <published>2021-06-23T23:43:11.000Z</published>
    <updated>2021-07-04T23:55:06.005Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="735cf5bb4a4f9cf1a4529913c85c2cca5fb364e39916c36f3d38f1f6940e1047">995e50c340763ee1a325e8c3b289bb9412903aa8f2fc933eec9ae99a5646d798e1a3081c12ba095fd7da1fb53038e2eb90f1b9ddd3d0804708a3e3e90bf18b2846b6c60efeb61aedc5c715ecfd25b28ffff0ee2df66cd01c8777d8cc811402bd6e5fd29a226a8e95eb5301d263ad485e0afda7ed54834eef04db97dc2df950e5d18ed2d388eeb860ab190515bf78a18ea233b0fb7d5f7892bcc406277ff374e2e5d51edfcdfd8195d01c8a5cf702003fd562b04f9d020bec9049f8bfe9db9e6c6896934a77d0bb33096618142693fd338fca2aaaec7daed836a0bfbae260b6f0a206835d312d0e9646f474491a9a5a9bf72cea48ebfc88b3631ec3502a5e782e06bbd9cf0e70c0db08e986d56401562c2246a7d565468e8acde90266065ed42344b8e2b38e9ec1e1cb991dd395ab7fa4d0f047cd4874a94d819441ba58a1a8fb8ce3a510cfdbfd32c0157f900cc5ff7979b44496fd9869ff1b838ad1fcaff5968ff9b7c1e4563ddfaeb0d9bcfde1af361f840db47e9454c58f623d5e2b9e232135e05d5aa61330700bb9d9bfd062d404f89ce689e3d3b0f7a96d878945a18c257e429032e6ecaf6782164120661721d4870a885275a430c1d8d5cc248b72f3d352cca2b748ce84492d201a34aaa43e48376047532078613d64e495db2fa70b6021bd7306e79272ba0d2917914c7069d1b461405c0f84a4adea624df75f49e313b47800e7f53214364a122c829ff2230f7284e1579eb4a26b9ad770474fb35281a648f09eaf7c36fd3492500bf0f04b94bcbe1056598926e760ea4a54635f0b640399486a65770cd45433f0fff3a1d19d9f93c1ce333d34ff1bb83e979caf7a80273f4a52eaf52d6c5118bfd48fa2efdab81de278c8c4ba80872b7a4a5f910c2193eeedf4dcb3e93489fe5e9f59bc69e3e4a1f7f7f00d6a66cb0eedfcc36c47258c1c019dc5623f2e07a67d73ac07eba9aca363106bee33ab1c0232d9696efe33aab6dfe46b192bee220ed221add7bfe70d3e9629e0d8097f666cbcc49c9e18e6de1b8a57ac862f5b66ece42de68f6befe7a3e93c2c86d375a10283c666daa8d982e6312c875a382c64237bb241b78d51066a1f8cb66f90846de92b7dd3148ad3d95545166523258d1e51789437b266aa</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这里有东西被加密了，需要输入密码查看哦。
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="信" scheme="https://mrzhangboss.github.io/tags/%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>FlatMap用法</title>
    <link href="https://mrzhangboss.github.io/2021/06/20/java/stream/FlatMap%E7%94%A8%E6%B3%95/"/>
    <id>https://mrzhangboss.github.io/2021/06/20/java/stream/FlatMap用法/</id>
    <published>2021-06-20T10:59:20.000Z</published>
    <updated>2021-06-20T10:59:38.795Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Java" scheme="https://mrzhangboss.github.io/categories/Java/"/>
    
    
      <category term="Stream" scheme="https://mrzhangboss.github.io/tags/Stream/"/>
    
  </entry>
  
  <entry>
    <title>第二封信</title>
    <link href="https://mrzhangboss.github.io/2021/06/16/letter/2/"/>
    <id>https://mrzhangboss.github.io/2021/06/16/letter/2/</id>
    <published>2021-06-16T00:34:51.000Z</published>
    <updated>2021-07-04T23:55:05.993Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0a8b96305bc1f46151a59d44159669f8a9e0783930aa82b03dd3912d58c4f99b">995e50c340763ee1a325e8c3b289bb9412903aa8f2fc933eec9ae99a5646d798e1a3081c12ba095fd7da1fb53038e2eb4fb4a0470946ce98dd4f24e4e1b60612b0e7573c202882b12a99b3c82464c9ea6756639114992f107b39766b01e1bddbf4d95903e07fd9dc9975e407073180e8640b0dd753d4691860605e3d9256475b87a365e4a1ccc497dbe17fa7a62d0105aea7b5cc772c8574a1b1098603ebe9658887b4647f72e9b99d220f11a9406e3ed31279decd16bf98e13e05d03617bf4cd65a50c02e69a0c0824188fa33c3708a8c5ad1764c11c17e2d9fb697d6970470cbf1ebe504d0a06ab18483d574f887b88431377dcf7a0d915484a128fd3527964bcf0e24bfe30251e1d9ce217f4d7d9abe2a0919d4c8952ca5653fa5e2f0e816c56305c81c026542f834d01d0bd5555f620aa61c1f8a37e3cf48f0e465c875e6639c07cecb477f9c6567f48316525aac490d241f73de0163a106f47bea730a29bf5b2f12ab8d3afdce93e1cb46ed0315800632fcc0ae999665039f1cfe003b10913b90d966e959500fcd2ecb2d75a8942812204bdd2ff5fa4823a92d5bb163fc64cf115ae4f6cd1753291a11e730a269678bbcc0569169d675228ac883278fdcd8c62ed930e84c82a43d3a47be881760c9a29b1b20f9b920d8302d031284f1897b9c86d96a65a2e05bd02393e5f72453a045f90df5c62db24e20e1880b540a33b66a8a70f32913dbc4ade5f0044f279317b30c30f2470a2e7dca3fdb916892aad0864f9213fac030c559b5c800cc278eb62809972b7e64f2e612c3357ba5cdd1ceab49f1c97d76614b9457bffc50e123d0645ee2a5b8a53a507c862a0842ae73d4f17852ba4131867ec9920d276a0d9aa4f8e1dc782b544cf637b1c782bc702f2f798f277cfb6e9de0d4c1654d0627351fb2121e7a13488565373d32e86bf457f459a982f9a152e40e9d1eb8087fa4b6c5eab7d13a75d8de6740681d92604b87ee78465363f3dbf6448def8416540078abc825f2c95bbe404b3ce6fecff648c4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这里有东西被加密了，需要输入密码查看哦。
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="信" scheme="https://mrzhangboss.github.io/tags/%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>第一封信</title>
    <link href="https://mrzhangboss.github.io/2021/06/15/letter/1/"/>
    <id>https://mrzhangboss.github.io/2021/06/15/letter/1/</id>
    <published>2021-06-14T23:57:33.000Z</published>
    <updated>2021-07-04T23:55:05.985Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f5996bb6a67b8cae3bb4fb4c37c2cb38d774dc8cde7abdc3d906240c4e40955b">995e50c340763ee1a325e8c3b289bb9412903aa8f2fc933eec9ae99a5646d798e1a3081c12ba095fd7da1fb53038e2ebb1da09abd3c6b8265fe7183043b4490f513dd20b76d893d449ad16e3228da760856971034b5c271e06513ecff04f2c144c967020be9e3856a6bdfec6a591c651aa5c841b136d7756af0f1d77ed571daee6e0ac7a1e4573047d67a663ad0d9d70116e140c76efac06186e694d5e4e99dc22a07bcd148bb946576da2f56a7f977d0ad1006aa44a65e876b8f9ccf73cee3e5b394a55e00f6d13c1afd1afe05f1f5dc1ed7c3a2f0c3cd4e81234a833ce74706a515ba1e07d70ea73d769b95f9f8a3eedbcaa4f881d4a407e9a79bc0edce30bee5143691afb05d84d2687608cf66d1732bbf9df67cd943f9d1b62ec2fa319f4aa99df31ab6b024adacdabb8f17a6a348a48993078994db7374b41cf17e6b67c9d7406449ce82c3436d907094493c9f04eb3ef798332a47afdbf07caa7db7e8152af5dc7d8540cc1608522f72f6bf5cd79439c2110b0f3c2df5742a08f997d2d5bb109690496a1eabc79f90936ae4d7c766f2160c2decc1c1fa66e2fdf8ebb5527024c8a2eedac3506072e593c2d9a8f40daff5afb7fc80830b5202ad67fb9aed58214cc2132441a841f47080126f37328e21d781756b58466b1c910f42a1f25ed79187be86bef259586c05b7f201eca54204247546248e28a5bc070ddd06c82451850b489f4bb731a5b4e498a4810361da6c0f578be21edb725df35b7dee3214e6647e843d1d7a2dfaec00a7cd0c3054781f542e4a62d32f2a1749650e429a6abb85fad87caf0002776c7d8e30de2f20ff2bd33aace96fefccbcc07b282c4ef9a98d1459208371884eef636ca4b1ebbb4084605c80275ffea1212e281a1a98b961c4c829eb5e716524f41c31e51f6991633726596dc0bce51790067bad4109de1807affd5acbb3aee7fde76e518ccc7954648756227aa850c6b8c2d38d4c1fa839827195261265379456c9af6a4c34f47dd3a5f790c727c306a2a8416f8d3a32e381c39a8b3816b154b632581c29441ffef3d48673dc9dea9d6646b814e08cf72a53bae27e8f422bbc2ab29faf61e4338e2488880883e91d918d6775448b0b247c43cad2a43d27333e644ffdf5f0155a774c581a7d3225241ad5254008df7abd299463bc9ec4f85825c2928d3eb62d5ebfc6ecbd1292a3bfe85992ac7a1e83f1e5cd9a92f0e5088f2789ae625669c5343a78099fe829696f74de6c99a3d88c218a74dcbce952761726e95f81b2b82c05746a7bb46ce04469393714d8cfc95076cefed7401ac07d515b09bc51a080fd34fedab8467eab9c6250c5442192ddffeac4865c58a0a3503dfc26d16f3f1437e89030c05d3f9a956f24756cd7512812e0e5b8c72e50336850f13e13abfbf2fb482d7e709ae0da9ebc44bc1455859c40c22eee74f965c5c74951a74bf67f6e2a7b39ef83294528758552de81f890fa0130defd064868be4971f46cb11512be75cf7fb1a4904676b9d71969e8fb407e72e3da998a5b136689d04efec92dfa46c8de3f9a25a77edc2bd6d78c51aa3e1c3404152bf30c23616dbc8ac702ef9ed0e0235d81c202e37fd228e1790bb7e4dd3132500126245257c73ad814290679b0d28bd0f45e7dce838432374be168877340f3c94c7dbb1d3d5fb1d5be426d33e34bb0acd55febcfc3a1cf4072e50a50c691a55b403a204ec976ef8e3bfdf1d8014ff53550422576d5525f281387446b42b11b8e43d7973e77596357069a169a303076958c78dc55c803dcd9ce1943bf2607d276767528d0c88153dde55486a54eb8e1635d24997ac5e66af446301c6ff353430e05871c99093f8849442e4f34c1cb992ffb19ca49aa299db1540ce8b4fabb76949b429bedfd7f40a47b66f86109912fd0f3581ff306616cd35c3b6c5169c22d0ec3bd3da8760229d9f8084e54665753edd823bbac333cd4fc4e97bca2361db43b514fa6b9f373c1c29f3c4a41a86f4a5d2f4a233780a6a418ba4de0b17a4eca249b560fedd606918b532b430a34af5c1f34fedd65277df555b0f57096ba613ce05dd6b41180be70182e5c8bdd7a2f90212b645be978ba60896d57635cb35e41cd284da6f53e32c2489cceae623a0fd93e517b8e758bc7d9f17b041518e5c52e3bbf58688d1aac36eccc6607392afb04da9f867051832fd0fc868b2c6814204f16ec6ec3d3b589cb228e07b49af96a741a74b7b2c3a461e60effaeb882d41b5419330cca18524aa8809ad1e34d86415028faec4400a1d8bb61adcb1b1e102c4d8291ad95ca3ad069ce493016d9bbc69f4ffb230a08aa336eac3fc34ca598445d0c9f2e77e9ff074cab37bba445095fbc66395329ff79316f1117bf55302cbc2b262674037614f1df05e753597cb9163cc0205a9cffd00fba984f9938ea73d3265366f11249cc3511cf3a4c5551770bae28ffe625e00617246a847839d92be9af4052830cc2f831bae7b5522149e142def2dfa98271ce80b4b7947f92efde86bd4aceeb0a365a0fbff70ad496e1bdd1b7bc41ff3b017cef83e56b76a499bea33d6468b8e13b98f745b749269f1da46bd66be0c25eff03746d277415254af903b02c836cfb97a64c4e0bdc4de61a408abc2b0d99248909efab33d4df894f465814c77484316b45999ef59626a75344c2100470d4f38e68facd252a0aad69d91fb5607b177bda7d196ae52822d5eba988744200362acc316937e3a7d029e2c9f1986a8d29ca075dc8a5850647b79c723d0289715f4b90c3f63d86e6df7657a237508fddf03fc78e579ef6103af566b1cbe5928336e723d1bcaccf715001dd4b48877c284d14268f99b9aa0738cdc740ea2cd6dc9ba334fe67c8074ee3325c58618547b9890bfe2f74ee2015bef92dbb24f625832149c30015b64872f328752c34c025b28f23b5d48094600f51f35dff35acb70982ec78019f8fc0e5d0a667f35737353c9e2828bc1601fc68be460c8e47533b48d0bdb3e869a9c90978cc3237383c6530c4c0bda31355420a29077328c39e11c2ff365ad082f80fd2bdae3420cf30dc4129ab20674cdcedbed3828069a7516f10fca62760656a12306d18ffbd1ffcc04c0c62e437f681c552f3d6eef8ee0d7096d84b86b51586b8cfc18392576d989e92c2dacbde2c07e981b4b8ec19863409586bd590903e6687bbae21f4ec95a8d9103e06f96064e37449f454942f572ec2713e02106a4588e4a837d733673b10c5c8413e829f00942a5e0a7b1469369387e0987ab7fbf4c661893b2648bbb9d8249a0ab1332c2be7f0d1df60c87181a589e3ef94e945fd7ae2983240857c50545c2732b6a19aa85bddbd2e9aa0c62820f939d4392e3454bfc992f4f9fda62865d2cffeca6cb1aac40c2bded861a80c174caad2ecc525ceea54a9dd88270ba007e0a5ee29307010a8817bd07bc0f8ddc0d1509918f84a69b89b5d25663d25705</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这里有东西被加密了，需要输入密码查看哦。
    
    </summary>
    
      <category term="恋爱日记" scheme="https://mrzhangboss.github.io/categories/%E6%81%8B%E7%88%B1%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="信" scheme="https://mrzhangboss.github.io/tags/%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Stream源码（2）：从问题出发看源码</title>
    <link href="https://mrzhangboss.github.io/2021/05/23/java/stream/%E4%BB%8E%E9%97%AE%E9%A2%98%E5%87%BA%E5%8F%91%E7%9C%8B%E6%BA%90%E7%A0%81/"/>
    <id>https://mrzhangboss.github.io/2021/05/23/java/stream/从问题出发看源码/</id>
    <published>2021-05-23T01:48:54.000Z</published>
    <updated>2021-06-01T14:22:53.395Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前看一些开源项目源码的时候，发现一个问题，假如你贪全，一口气把整个代码看完，由于现在程序架构<br>比较复杂，很多功能被分成很多个组件来完成，有的时候你会被程序跳来跳去给弄晕，假如你但看一个小功能，你又<br>不知道为啥要用这个</p></blockquote><p>所以这次准备尝试从问题入手，首先给自己提一些<br>问题，然后在从源代码中寻找答案，<br>在寻找答案的过程中会遇到更多问题，就这样打破砂锅问到底，最终没有问题了，这个时候你就差不多看懂了</p><h2 id="0x00-问题"><a href="#0x00-问题" class="headerlink" title="0x00 问题"></a>0x00 问题</h2><ol><li>distinct 操作过程中是否会将新加入的元素和历史元素一一比较？</li></ol><p>为啥会有这个问题呢，因为在看源码</p><pre><code>Returns a stream consisting of the distinct elements (according to Object.equals(Object)) of this stream.For ordered streams, the selection of distinct elements is stable (for duplicated elements, the element appearing first in the encounter order is preserved.) For unordered streams, no stability guarantees are made.</code></pre><p>这句话意思是会依靠｀Object.equals(Object)｀　来去重，我们知道｀distinct｀和｀filter｀都是中间操作<br>难道<code>distinct</code>会将每个元素和历史元素做一个<code>Object.equals</code>调用吗</p><p>假如这样做的话，那么这个操作就是<code>O（n^2)</code>的时间复杂度了，显然不太靠谱，我们查看<code>distinct</code>源码发现</p><p>最终<code>distinct</code>生成了一个<code>StatefulOp</code> ，而且这个类存在一个<code>reduce</code>函数，其中声明了一个</p><pre><code>TerminalOp&lt;T, LinkedHashSet&lt;T&gt;&gt; reduceOp                = ReduceOps.&lt;T, LinkedHashSet&lt;T&gt;&gt;makeRef(LinkedHashSet::new, LinkedHashSet::add,                                                         LinkedHashSet::addAll);</code></pre><p>我们可以看到这个变量是一个终止操作，其中使用<code>LinkedHashSet</code>来进行聚合，所以看到这我们就猜测<br><code>Stream</code>没有这么傻，它声明了一个<code>LinkedHashSet</code>来存贮历史元素，这样只需要将加进来的元素进行<br>哈希计算，然后跟哈希碰撞的调用一下<code>Object.equals(Object)</code>函数就好了</p><p>我们看到这篇<a href="https://blog.csdn.net/puppylpg/article/details/78556730" target="_blank" rel="noopener">博文</a>的实验也证明我们的猜测了`  </p><p>接下来我们又有一个疑惑Stream内部是如何实现的呢？</p><h2 id="0x01-猜测"><a href="#0x01-猜测" class="headerlink" title="0x01 猜测"></a>0x01 猜测</h2><p>我们首先从最小的代码来看，我们首先来看一个无状态的stream函数</p><pre><code>Stream.of(1L, 2L, 3L, 4L).forEach(System.out::println)</code></pre><p>我们使用<code>for</code>循环用来实现也非常简单</p><pre><code> for (long l : new long[]{1L, 2L, 3L, 4L}) {  System.out.println(l);}</code></pre><p>接下来我们来思考，如何实现一个有状态的<code>Stream</code>流</p><pre><code>Stream.of(1L, 2L, 3L, 4L).reduce(0L, Long::sum);</code></pre><p>我们如何用<code>for</code>循环来实现呢，很简单，定义一个变量</p><pre><code>long begin = 0;for (long l : new long[]{1L, 2L, 3L, 4L}) {    begin += l;}</code></pre><p>我们能很容易写出一层for循环，但是Stream强大的地方在于，他可以穿插很多函数处理<br>比如：</p><pre><code>Stream.of(1L, 2L, 3L, 4L, 4L, 5L, 5L).distinct().filter(x -&gt; x &gt; 2).reduce(0, Long::sum);</code></pre><p>我们简单的穿插了<code>distinct</code>和<code>filter</code>操作，我们接下来尝试使用<code>for</code>循环来实现上面的<code>Stream</code></p><p>首先我们知道<code>distinct</code> 需要一个<code>Set</code>来过滤已经存在的，其中<code>reduce</code>需要一个初始量，那就好做了</p><pre><code>long start = 0L;for (long l : new long[]{1L, 2L, 3L, 4L}) {    if(!set.contains(l)) {        set.add(l);        if(l &gt; 2) {            start += l;        }    }}</code></pre><h2 id="00x02-源码探究"><a href="#00x02-源码探究" class="headerlink" title="00x02 源码探究"></a>00x02 源码探究</h2><p>接下来我们看看<code>Stream</code>内部如何实现这个<code>for</code>循环的，我们可以看到，其实<code>.distinct().filter(x -&gt; x &gt; 2).reduce(0, Long::sum)</code>对于每一层我们都需要能<br>创建一个<code>Sink</code>，对于这个<code>for</code>循环来说，都是把每个数据，我们把数据从一个<code>sink</code>到其他的<code>sink</code></p><p>所有的<code>Sink</code>都实现了<code>Consumer</code> 接口，其中最重要的接口就是</p><pre><code>void accept(T t);</code></pre><p>这个消费接口，我们可以理解“吃”数据，它会把我们传给它的值都“消化”掉</p><p>当我们在创建<code>.distinct().filter(...)...</code>这些stream的时候，我们做了什么呢，<br>我们每进行一次中间操作，我们都新建了一个流，其中我们通过<code>upstream</code> 这个变量指向<br>之前的流</p><p>当我们碰到终止操作比如<code>reduce</code>的时候，我们会进行一个回溯，把所有<code>upstream</code>都进行回溯，反过来把一个<code>sink</code>组装起来（每个sink指向它的上游）</p><pre><code>// java.util.stream.AbstractPipeline.classfinal &lt;P_IN&gt; Sink&lt;P_IN&gt; wrapSink(Sink&lt;E_OUT&gt; sink) {    Objects.requireNonNull(sink);    // 回溯之前的stream流，创建sink，并让当前的sink指向上流    for ( @SuppressWarnings(&quot;rawtypes&quot;) AbstractPipeline p=AbstractPipeline.this; p.depth &gt; 0; p=p.previousStage) {        sink = p.opWrapSink(p.previousStage.combinedFlags, sink);    }    return (Sink&lt;P_IN&gt;) sink;}</code></pre><p>最终我们得到了最上流的sink，以上面为例就是<code>distinct</code>那个sink</p><p>接下来我们执行<code>for</code>循环，其中最重要的就是</p><pre><code>// java.util.stream.AbstractPipeline.copyInto 函数// 执行for循环 其中 传入的sink就是 我们上面得到的像葫芦串一样的sinkspliterator.forEachRemaining(wrappedSink)</code></pre><p>我们只需要给<code>wrappedSink</code>传入<code>for</code>循环的值就好了，由于每个sink都有其上游的引用，比如说<code>distinct</code>的sink，<br>他会判断是否已经存贮在<code>sink</code>中，如果没有就往上游传，由于上游也是个<code>sink</code>，所以最终如果不传了或者到最上游了就继续下一<code>for</code>循环的值</p><h2 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h2><p>总结，我们这边非常浅显的把源代码给介绍了一下，其实要想吃透最好使用debug功能，一行一行代码进行debug，这样就能印象更深刻</p><p>##　引用</p><ul><li><a href="https://blog.csdn.net/puppylpg/article/details/78556730" target="_blank" rel="noopener">对Java8中distinct()的思考</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;之前看一些开源项目源码的时候，发现一个问题，假如你贪全，一口气把整个代码看完，由于现在程序架构&lt;br&gt;比较复杂，很多功能被分成很多个组件来完成，有的时候你会被程序跳来跳去给弄晕，假如你但看一个小功能，你又&lt;br&gt;不知道为啥要用这个&lt;/p&gt;
&lt;/bl
      
    
    </summary>
    
      <category term="Java" scheme="https://mrzhangboss.github.io/categories/Java/"/>
    
    
      <category term="Stream" scheme="https://mrzhangboss.github.io/tags/Stream/"/>
    
  </entry>
  
  <entry>
    <title>Stream源码（1）：如何实现去重</title>
    <link href="https://mrzhangboss.github.io/2021/05/15/java/stream/%E4%BB%8E%E5%8E%BB%E9%87%8D%E5%88%B0Stream%E6%BA%90%E7%A0%81/"/>
    <id>https://mrzhangboss.github.io/2021/05/15/java/stream/从去重到Stream源码/</id>
    <published>2021-05-15T14:48:20.000Z</published>
    <updated>2021-05-20T15:24:05.152Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本篇博客是在看代码的时候看到使用Java8使用<code>Stream</code>去重的妙用，从而对Java如何使用Stream实现几行代码<br>完成一个可支持并行化的流式计算程序</p></blockquote><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>什么是<code>Stream</code></p></blockquote><p>简单来说<code>Stream</code>就是Java8引入的一种流式API，让只需要定义一些处理函数就能优雅的对集合的一些操作</p><p>举个栗子，之前我们想遍历打印所有的参数我们得写下面代码</p><pre><code>for (int i : new int[]{1, 2, 3, 4}) {    System.out.println(i);}</code></pre><p>假如使用Java8，我们只需要一行代码</p><pre><code>Arrays.stream(new int[]{1, 2, 3, 4}).forEach(System.out::println);</code></pre><p>我们只需要定义一个函数，其他的<code>Stream</code>帮我们解决</p><h2 id="Stream模型"><a href="#Stream模型" class="headerlink" title="Stream模型"></a>Stream模型</h2><p>简单来说<code>Stream</code>把操作分为两张，一种是中间操作，一种是终结操作</p><p>中间操作你可以把他看做对数据源的一种处理，而终结操作是定义产生新数据过程，简单来说，假如我们有一堆苹果<br>需要处理，我们使用一个流水线来对经过的苹果进行各种处理（中间操作），丢掉烂掉的（filter），削掉皮（map）等等，<br>最后的我们需要对苹果进行装箱（终结操作）</p><h2 id="分析功能"><a href="#分析功能" class="headerlink" title="分析功能"></a>分析功能</h2><p>我们接下来看看我们需要实现的功能，就是去重，我们知道<code>Stream</code>其实提供了一个<code>distinct</code>方法中间操作来帮我们实现去重功能，<br>对于基本类型比如<code>String</code>，<code>Integer</code>，<code>Long</code>这些我们能很容易进行去重，但是对于复杂类，我们得<br>重写<code>hashCode</code>和<code>equal</code>方法来支持去重操作了，对于集合内的每个数据都会用<code>equal</code>来进行去重</p><p>接下来我们尝试直接使用终结操作<code>collect</code>来解决掉<br>怎么做呢，<code>collect</code>其实也很简单就是创建一个容器，把数据装进去，我们就只需要使用一个可以支持去重操作的<br>容器来做就好了</p><p>支持去重的有<code>Map</code>和<code>Set</code>，所以我们想到的第一个方法就是将流变成一个<code>Set</code>，这个也是网上很多人提供的一个版本</p><pre><code>dishes.stream().distinct().collect(Collectors.toCollection(            () -&gt; new TreeSet&lt;&gt;(Comparator.comparing(Dish::getType)))</code></pre><p>我们把这行代码给分解成两行</p><pre><code>TreeSet&lt;Dish&gt; container = new TreeSet&lt;&gt;(Comparator.comparing(Dish::getType));dishes.stream().collect(Collectors.toCollection(() -&gt; container));</code></pre><p>第一行其实就是声明了一个容器，核心代码就是 <code>() -&gt; container</code> 我们传入一个容器，让他来存贮，我们使用<br><code>TreeSet</code>的一个构造器，它只需要传入一个函数，他会比较传进来的每个值，假如发现已经存在了它就不会插入了</p><p>但是这个有个问题就是，他只能选择第一个出现的</p><p>接下来我们试试用<code>Map</code>，</p><pre><code>dishes.stream().collect(toMap(Dish::getType, d -&gt; d);</code></pre><p>我们写下下面的代码，但是这个代码有点问题就是假如出现重复的，他会抛异常，因为程序默认不知道你想要哪个数据</p><pre><code>dishes.stream().collect(toMap(Dish::getType, d -&gt; d, (oldData, newData) -&gt; oldData));</code></pre><p>我们可以传入一个选择函数，这样当发现重复的时候就可以选择要哪个插入到map中去，这个也解决了上面使用<code>Set</code>来存贮的时候没法选择到底是新来的还是后来的</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇博客简单的介绍了实现去重功能的三种实现方法，接下来这个系列的博客会深入到源码来探究Java8如何实现<br>Stream这么多功能的</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><a href="https://cloud.tencent.com/developer/article/1756399" target="_blank" rel="noopener">Java Stream 源码分析</a></li><li><a href="https://www.jianshu.com/p/3219f184bb8e" target="_blank" rel="noopener">JAVA8优雅的去重</a></li><li><a href="https://club.perfma.com/article/116123" target="_blank" rel="noopener">JAVA8Stream 源码分析2</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本篇博客是在看代码的时候看到使用Java8使用&lt;code&gt;Stream&lt;/code&gt;去重的妙用，从而对Java如何使用Stream实现几行代码&lt;br&gt;完成一个可支持并行化的流式计算程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;引言&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Java" scheme="https://mrzhangboss.github.io/categories/Java/"/>
    
    
      <category term="Stream" scheme="https://mrzhangboss.github.io/tags/Stream/"/>
    
  </entry>
  
</feed>
