<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on 阿伦博客</title><link>https://mrzhangboss.github.io/tags/python/</link><description>Recent content in Python on 阿伦博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© 2024 阿伦</copyright><lastBuildDate>Sat, 15 Sep 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://mrzhangboss.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>触摸Python的GIL</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E8%A7%A6%E6%91%B8python%E7%9A%84gil/</link><pubDate>Sat, 15 Sep 2018 00:00:00 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E8%A7%A6%E6%91%B8python%E7%9A%84gil/</guid><description>&lt;blockquote>
&lt;p>Python的&lt;code>GIL&lt;/code>一直是被大家攻击其语言的一个弊端，每次在讨论语言特性的时候这点总是会被人们提起，但是这个东西好像就一个“污点”，大家都知道，但是大家都不了解为什么。本片博客就是好好的探索一下GIL，让我们不再畏惧它&lt;/p></description></item><item><title>如何让你的Python更快</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84python%E5%83%8Fc%E4%B8%80%E6%A0%B7%E5%BF%AB/</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%A6%82%E4%BD%95%E8%AE%A9%E4%BD%A0%E7%9A%84python%E5%83%8Fc%E4%B8%80%E6%A0%B7%E5%BF%AB/</guid><description>&lt;h2 class="relative group">引言
&lt;div id="%E5%BC%95%E8%A8%80" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E5%BC%95%E8%A8%80" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;blockquote>
&lt;p>其实一开始没有想到写关于&lt;code>Python&lt;/code>的加速，一开始只想好好了解一下&lt;code>C++&lt;/code>这门语言，没想到最后研究来研究去，基本上把所以加速框架都试验了一下，这篇博客就谈谈我对&lt;code>Python&lt;/code>加速的看法&lt;/p></description></item><item><title>从关系角度来看XPath</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E4%BB%8E%E5%85%B3%E7%B3%BB%E8%A7%92%E5%BA%A6%E6%9D%A5%E7%9C%8Bxpath/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E4%BB%8E%E5%85%B3%E7%B3%BB%E8%A7%92%E5%BA%A6%E6%9D%A5%E7%9C%8Bxpath/</guid><description>&lt;blockquote>
&lt;p>这段时间没有写博客，一个原因是由于刚毕业没了学校的学习动力反而下降，另外一个方面由于花了很长时间研究编译原理，然而自己却对它没有太多理解，所以也就没有整理自己的知识，现在慢慢稳定下来，会继续像以前一样更新博客&lt;/p></description></item><item><title>Python正则表达式</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link><pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid><description>&lt;hr>
&lt;h2 class="relative group">引言
&lt;div id="%E5%BC%95%E8%A8%80" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E5%BC%95%E8%A8%80" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;blockquote>
&lt;p>这篇博客其实写于2016年，最近在重新学了一下正则表达之后，觉得有必要重新整理一下正则的用法&lt;/p></description></item><item><title>Python异步的理解</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/python%E5%BC%82%E6%AD%A5%E7%9A%84%E7%90%86%E8%A7%A3/</link><pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/python%E5%BC%82%E6%AD%A5%E7%9A%84%E7%90%86%E8%A7%A3/</guid><description>&lt;h2 class="relative group">起因
&lt;div id="%E8%B5%B7%E5%9B%A0" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E8%B5%B7%E5%9B%A0" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;blockquote>
&lt;p>异步的出现主要是单线程的io等待，由于任务大部分是io处于等待，假如让一个线程工作，所有任务按照流水线形式执行，假如一个请求需要1秒，五个请求需要五秒，那么如果能让他们同时运行的话，那么速度就能增加五倍&lt;/p></description></item><item><title>爬虫分布式总结</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E7%88%AC%E8%99%AB%E5%88%86%E5%B8%83%E5%BC%8F%E6%80%BB%E7%BB%93/</link><pubDate>Tue, 04 Apr 2017 16:03:55 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E7%88%AC%E8%99%AB%E5%88%86%E5%B8%83%E5%BC%8F%E6%80%BB%E7%BB%93/</guid><description>&lt;blockquote>
&lt;p>由于最近在一家数据服务公司实习，项目需要了解分布式，所以在这里基于&lt;code>scrapy&lt;/code>的分布式总结一下爬虫的分布式实习&lt;/p></description></item><item><title>协程解决递归错误原理</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%8D%8F%E7%A8%8B%E8%A7%A3%E5%86%B3%E9%80%92%E5%BD%92%E9%94%99%E8%AF%AF/</link><pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%8D%8F%E7%A8%8B%E8%A7%A3%E5%86%B3%E9%80%92%E5%BD%92%E9%94%99%E8%AF%AF/</guid><description>&lt;h2 class="relative group">引言
&lt;div id="%E5%BC%95%E8%A8%80" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E5%BC%95%E8%A8%80" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;blockquote>
&lt;p>递归是高度抽象化问题的一个好东西，我们能从很多算法书里面看到这个，
但是递归虽然对于人来说好理解，但是计算机执行起来会损失性能，一个差的递归可能会耗光计算机的资源&lt;/p></description></item><item><title>Numpy的简析</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/numpy%E7%9A%84%E7%AE%80%E6%9E%90/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/numpy%E7%9A%84%E7%AE%80%E6%9E%90/</guid><description>&lt;p>numpy简单来说就是python的C版数组实现,因为python原生列表虽然好使,但是生成大量数据时开销很大,而numpy是基于C的,生成大量数组非常简单,而且操作他们速度非常快.&lt;/p></description></item><item><title>PIL （Pillow）</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/pil/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/pil/</guid><description>&lt;p>Pillow 是 PIL的对Python3支持的另外一个分支，当然他对Python2也兼容，由于PIL安装起来比较烦，而使用pip可以很轻松的安装Pillow，所以我选择Pillow使用，但是其核心还是PIL库的。&lt;/p></description></item><item><title>Python 线程(threading) 进程(multiprocessing)</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/python%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/python%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B/</guid><description>&lt;h3 class="relative group">
&lt;div id="heading" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#heading" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h3>
&lt;blockquote>
&lt;p>最近学了两个python库，一个负责管理线程，一个负责管理进程，原来一直写的都
是些单线程的程序，虽然web也关于并发和多涉及到线程，但都是框架管理的，学习&amp;gt;过后发现了解线程和进程对python的web开发也有一定帮助。下面先谈谈这对python对线程和进程的支持再谈谈对这两个库的应用。&lt;/p></description></item><item><title>python的编码问题研究------使用scrapy体验</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/python%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98%E7%A0%94%E7%A9%B6/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/python%E7%9A%84%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98%E7%A0%94%E7%A9%B6/</guid><description>&lt;blockquote>
&lt;p>基于python2&lt;/p>
&lt;/blockquote>
&lt;p>scrapy是一款非常轻量级的爬虫框架，但是由于它隐藏了太多关于网络请求的细节，所以我们有时候会遭遇到一下很尴尬的bug，当然这主要是因为碰到一些不规范的网站。&lt;/p></description></item><item><title>python学习</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/python%E5%AD%A6%E4%B9%A0/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/python%E5%AD%A6%E4%B9%A0/</guid><description>&lt;h4 class="relative group">由于有其他编程语言基础，所以对于python的学习并不吃力，但是整体感觉python的确与前面学习c、c&amp;mdash;&amp;mdash;&amp;mdash;
&lt;div id="%E7%94%B1%E4%BA%8E%E6%9C%89%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E6%89%80%E4%BB%A5%E5%AF%B9%E4%BA%8Epython%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%B9%B6%E4%B8%8D%E5%90%83%E5%8A%9B%E4%BD%86%E6%98%AF%E6%95%B4%E4%BD%93%E6%84%9F%E8%A7%89python%E7%9A%84%E7%A1%AE%E4%B8%8E%E5%89%8D%E9%9D%A2%E5%AD%A6%E4%B9%A0cc---------" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%E7%94%B1%E4%BA%8E%E6%9C%89%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E6%89%80%E4%BB%A5%E5%AF%B9%E4%BA%8Epython%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%B9%B6%E4%B8%8D%E5%90%83%E5%8A%9B%E4%BD%86%E6%98%AF%E6%95%B4%E4%BD%93%E6%84%9F%E8%A7%89python%E7%9A%84%E7%A1%AE%E4%B8%8E%E5%89%8D%E9%9D%A2%E5%AD%A6%E4%B9%A0cc---------" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h4>
&lt;h3 class="relative group">1. 实时编译VS静态编译
&lt;div id="1-%E5%AE%9E%E6%97%B6%E7%BC%96%E8%AF%91vs%E9%9D%99%E6%80%81%E7%BC%96%E8%AF%91" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#1-%E5%AE%9E%E6%97%B6%E7%BC%96%E8%AF%91vs%E9%9D%99%E6%80%81%E7%BC%96%E8%AF%91" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h3>
&lt;p>不需要输入任何前缀，直接将代码放在python解释器上面就能运行，虽然window下不支持直接点开文件就能使用，但是只要安装了python解释器就能很轻松的运行。&lt;/p></description></item><item><title>关于python3和python2 import区别</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%85%B3%E4%BA%8Epython3%E5%92%8Cpython2import%E5%8C%BA%E5%88%AB/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%85%B3%E4%BA%8Epython3%E5%92%8Cpython2import%E5%8C%BA%E5%88%AB/</guid><description>&lt;blockquote>
&lt;p>最近从python2转到python3,发现还是有一些不同,一些库改名字很好解决,但是这个import机制不了解原理是不好理解的.&lt;/p></description></item><item><title>字符串处理</title><link>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</link><pubDate>Mon, 18 Jul 2016 16:07:36 +0000</pubDate><guid>https://mrzhangboss.github.io/posts/backend/framework/python/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</guid><description>&lt;hr>
&lt;h1 class="relative group">string
&lt;div id="string" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#string" aria-label="锚点">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;blockquote>
&lt;p>原来的很多函数都逐渐迁移到&lt;code>str&lt;/code>和&lt;code>unicode&lt;/code>对象上去了,
不过有两个函数没有迁移出去&lt;/p></description></item></channel></rss>